
/* ===========================================
 * Button's component porperties
 * =========================================== */

/* Basic button's styles
 *
 * 1. From bootstrap's components: foundation.zurb.com
 * 2. From Foundation framework; remove old behavior for old browsers
 * @TODO: Add button-group and check border-radius
 * ==================================== */

 %button {

    background-image: none; // [1] Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: rem(1px) solid transparent;
    cursor: pointer;
    display: inline-block;
  margin-bottom: 0;
  padding: rem($padding-large-vertical) rem($padding-large-horizontal);
  text-align: center;
  transition: $default-transition;
    touch-action: manipulation;
    vertical-align: middle;
    white-space: nowrap;
    -webkit-appearance: none; // [2]
    -webkit-font-smoothing: antialiased; // [2]

}


@mixin button-size($size: md, $expand: false) {
  $size: $button-font-size * map-get($button-sizes, $size);
  font-size: $size;

  @if $expand {
    @include button-expand;
  }

  // @TODO: understand and add afterwards
  // @if using(iconic) {
  //   .iconic {
  //     width: 1em;
  //     height: 1em;
  //     vertical-align: middle;
  //     margin-right: 0.25em;
  //     margin-top: -2px; // The icons are oddly misaligned
  //   }
  // }
}

// Expand button's to container's full width
@mixin button-expand($expand: true) {
  @if $expand {
    display: block;
    width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
  @else {
    display: inline-block;
    width: auto;
    margin: $button-margin;
  }
}

@mixin button-disabled() {
  opacity: $button-opacity-disabled;
  cursor: default;
  pointer-events: none;
}

// The core button
@mixin button(
  $size: md,
  $expand: false,
  $background: $button-background,
  $background-hover: $button-background-hover,
  $color: $button-color,
  $style: $button-style,
  $radius: $button-radius
) {
  @extend %button;
  @include button-size($size);
  @include button-expand($expand);
  @include button-style($background, $background-hover, $color, $style);
}

@mixin button-style(
  $background: $button-background,
  $background-hover: $button-background-hover,
  $color: $button-color,
  $style: $button-style,
  $radius: $button-radius,
  $btngroup: false
){
  @if $style == hollow {
    border: rem(1px) solid $background;
    background: transparent;
    color: $background;

    &:hover, &:focus {
      border-color: scale-color($background, $lightness: 25%);
      background: transparent;
      color: scale-color($background, $lightness: 25%);
    }
  }
  // Solid is the default
  @else {
    @if $color == auto {
      $color: isitlight($background);
    }

    background: $background;
    color: $color;

    &:hover, &:focus {
      @if $background-hover == auto {
        background: scale-color($background, $lightness: -15%);
      }
      @else {
        background: $background-hover;
      }
      color: $color;
    }
  }

  @if $btngroup {
    border-color: $background;
    &:hover, &:focus {
      border-color: scale-color($background, $lightness: -25%);
    }
  }

  // @if using(iconic) {
  //   @if $style == hollow {
  //     .iconic {
  //       @include color-icon($background);
  //     }
  //     &:hover .iconic {
  //       @include color-icon(scale-color($background, $lightness: 25%));
  //     }
  //   }
  //   @else {
  //     .iconic {
  //       @include color-icon($color);
  //     }
  //   }
  // }
}

// Include only if the component is wanted
@include exports(button) {
  .button {
    @include button;

    &.tiny   { @include button-size(xs); }
    &.small  { @include button-size(sm); }
    &.large  { @include button-size(lg); }
    &.expand { @include button-expand; }

    &.secondary { @include button-style($secondary-color, auto) }
    &.success   { @include button-style($success-color, auto) }
    &.warning   { @include button-style($warning-color, auto) }
    &.alert     { @include button-style($alert-color, auto) }
    &.info      { @include button-style($info-color, auto) }
    &.dark      { @include button-style($dark-color, auto) }

    @if $button-style != hollow {
      &.hollow { @include button-style($style: hollow);
        &.secondary { @include button-style($secondary-color, $style: hollow); }
        &.success   { @include button-style($success-color, $style: hollow); }
        &.warning   { @include button-style($warning-color, $style: hollow); }
        &.alert     { @include button-style($alert-color, $style: hollow); }
        &.info      { @include button-style($info-color, $style: hollow); }
        &.dark      { @include button-style($dark-color, $style: hollow); }
      }
    }

    &.disabled { @include button-disabled; }
  }

  // @TODO: Understand and add
  // @if $button-tag-selector {
  //   button {
  //     @extend .button;
  //   }
  // }
}
